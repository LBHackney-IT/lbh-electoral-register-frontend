service: lbh-electoral-register

provider:
  name: aws
  runtime: nodejs14.x
  versionFunctions: false
  region: eu-west-2
  stage: ${opt:stage}

package:
  individually: true
  exclude:
    - ./**

functions:
  lbh-electoral-register:
    name: ${self:service}-${self:provider.stage}
    handler: lambda.handler
    timeout: 30
    package:
      include:
        - lambda.js
        - next.config.js
        - pages/**
        - public/**
        - build/_next/**
        - node_modules/**
    events:
      - http:
          path: api/{proxy+}
          method: ANY
      - http: ANY /
      - http: ANY /{proxy+}
    provisionedConcurrency: 5
    vpc:
      securityGroupIds: ${self:custom.securityGroups.${self:provider.stage}}
      subnetIds: ${self:custom.subnets.${self:provider.stage}}
    environment:
      GSSO_URL: ${ssm:/lbh-electoral-register/${self:provider.stage}/gsso-url}
      GSSO_TOKEN_NAME: ${ssm:/lbh-electoral-register/${self:provider.stage}/gsso-token-name}
      HACKNEY_JWT_SECRET: ${ssm:/lbh-electoral-register/${self:provider.stage}/hackney-jwt-secret~true}
      AUTHORISED_GROUP: ${ssm:/lbh-electoral-register/${self:provider.stage}/authorised-group}
      REDIRECT_URL: ${ssm:/lbh-electoral-register/${self:provider.stage}/redirect-url}
resources:
  Resources:
    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Aliases:
            - ${self:custom.aliases.${self:provider.stage}}
          PriceClass: PriceClass_100
          ViewerCertificate:
            AcmCertificateArn: ${self:custom.certificate-arn.${self:provider.stage}}
            MinimumProtocolVersion: TLSv1.2_2018
            SslSupportMethod: sni-only
          DefaultCacheBehavior:
            TargetOriginId: ${self:service}-${self:provider.stage}-custom-origin
            ViewerProtocolPolicy: 'redirect-to-https'
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            DefaultTTL: 0
            MaxTTL: 0
            MinTTL: 0
            ForwardedValues:
              QueryString: true
              Cookies:
                Forward: all
          Enabled: true
          Origins:
            - Id: ${self:service}-${self:provider.stage}-custom-origin
              DomainName: ${self:custom.domain-name}
              OriginPath: /${self:provider.stage}
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
    LambdaSecurityGroup:
          Type: "AWS::EC2::SecurityGroup"
          Properties:
            GroupName: ${self:service}-${self:provider.stage}-lambda
            GroupDescription: Allow all outbound traffic, no inbound
            VpcId: ${self:custom.vpcs.${self:provider.stage}}

custom:
  domain-name:
    Fn::Join:
       - '.'
       - - Ref: ApiGatewayRestApi
         - execute-api
         - eu-west-2
         - amazonaws.com
  aliases:
    staging: electoral-register-staging.hackney.gov.uk
  certificate-arn:
    staging: arn:aws:acm:us-east-1:645508685372:certificate/c81aa9d7-4c96-4b8b-a971-5c9eb5376174
  securityGroups:
    staging:
      - Ref: LambdaSecurityGroup
  subnets:
    staging:
      - subnet-0da40e73f58096370
      - subnet-0a9971ade82211dfa
  vpcs:
    staging: vpc-0b76be2aa7f71c7d2
